// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SailingPeople;

#nullable disable

namespace SailingPeople.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250409125010_fix2")]
    partial class fix2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BoatFacility", b =>
                {
                    b.Property<Guid>("BoatsId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("FacilitiesId")
                        .HasColumnType("uuid");

                    b.HasKey("BoatsId", "FacilitiesId");

                    b.HasIndex("FacilitiesId");

                    b.ToTable("BoatFacility");
                });

            modelBuilder.Entity("SailingPeople.Domain.Boat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Cabin")
                        .HasColumnType("integer");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Guest")
                        .HasColumnType("integer");

                    b.Property<string>("Image")
                        .IsUnicode(false)
                        .HasColumnType("text");

                    b.Property<decimal>("JulyToAugustPrice")
                        .HasColumnType("numeric");

                    b.Property<decimal>("JunePrice")
                        .HasColumnType("numeric");

                    b.Property<float>("Length")
                        .HasColumnType("real");

                    b.Property<decimal>("MayToOctoberPrice")
                        .HasColumnType("numeric");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RentType")
                        .HasColumnType("integer");

                    b.Property<decimal>("SeptemberPrice")
                        .HasColumnType("numeric");

                    b.Property<float>("Width")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("Cabin");

                    b.HasIndex("CategoryId");

                    b.HasIndex("Guest");

                    b.ToTable("Boats");
                });

            modelBuilder.Entity("SailingPeople.Domain.BoatImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("BoatId")
                        .HasColumnType("uuid");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("SortOrder")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BoatId");

                    b.ToTable("BoatImages");
                });

            modelBuilder.Entity("SailingPeople.Domain.BoatSpec", b =>
                {
                    b.Property<Guid>("BoatId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("SpecId")
                        .HasColumnType("uuid");

                    b.Property<string>("ValueEn")
                        .HasColumnType("text");

                    b.Property<string>("ValueTr")
                        .HasColumnType("text");

                    b.HasKey("BoatId", "SpecId");

                    b.HasIndex("SpecId");

                    b.ToTable("BoatSpecs");
                });

            modelBuilder.Entity("SailingPeople.Domain.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NameTr")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4cdf4cd0-dda7-41ed-bf55-76a2c5dbf0a0"),
                            NameEn = "Catamaran",
                            NameTr = "Katamaran"
                        },
                        new
                        {
                            Id = new Guid("9ab03277-4a7f-401e-9677-02d6853227f0"),
                            NameEn = "Motor Yacht",
                            NameTr = "Motor Yat"
                        },
                        new
                        {
                            Id = new Guid("9a242089-51bc-4f73-b2d5-033c4e20003f"),
                            NameEn = "Gulet",
                            NameTr = "Gulet"
                        },
                        new
                        {
                            Id = new Guid("a2092ee2-5218-4846-a716-024b57c1989e"),
                            NameEn = "Sailing Yacht",
                            NameTr = "Yelkenli"
                        });
                });

            modelBuilder.Entity("SailingPeople.Domain.Facility", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("FacilityCategoryId")
                        .HasColumnType("uuid");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NameTr")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FacilityCategoryId");

                    b.ToTable("Facilities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f00c470f-0595-4c35-af61-964e15ca4335"),
                            FacilityCategoryId = new Guid("a1e93a3d-6f42-4a15-a0c8-abf80693f9bc"),
                            NameEn = "Hot Water",
                            NameTr = "Sıcak Su"
                        },
                        new
                        {
                            Id = new Guid("3af46fcc-d59b-407f-b72f-669730089f9c"),
                            FacilityCategoryId = new Guid("a1e93a3d-6f42-4a15-a0c8-abf80693f9bc"),
                            NameEn = "Soap / Shampoo",
                            NameTr = "Sabun / Şampuan"
                        },
                        new
                        {
                            Id = new Guid("c8f70da8-6e5a-4a96-a8ed-e50b282636de"),
                            FacilityCategoryId = new Guid("a1e93a3d-6f42-4a15-a0c8-abf80693f9bc"),
                            NameEn = "Towel / Sheet",
                            NameTr = "Havlu / Çarşaf"
                        },
                        new
                        {
                            Id = new Guid("bc41edb3-0ae7-4205-8e4e-cce9a5a34b0e"),
                            FacilityCategoryId = new Guid("a1e93a3d-6f42-4a15-a0c8-abf80693f9bc"),
                            NameEn = "Toilet",
                            NameTr = "Tuvalet"
                        },
                        new
                        {
                            Id = new Guid("75e90b41-8a80-4fce-8bd9-4840b1169f91"),
                            FacilityCategoryId = new Guid("a1e93a3d-6f42-4a15-a0c8-abf80693f9bc"),
                            NameEn = "Shower",
                            NameTr = "Duş"
                        },
                        new
                        {
                            Id = new Guid("db35e9f6-419d-4c9e-a200-2c9902f9d148"),
                            FacilityCategoryId = new Guid("1db7a378-5e4e-4c61-b0a2-f7dab56f6d51"),
                            NameEn = "Refrigerator",
                            NameTr = "Buzdolabı"
                        },
                        new
                        {
                            Id = new Guid("16da6aca-5f9e-43c8-b2d7-40cb02ed4bdf"),
                            FacilityCategoryId = new Guid("a3f47c0e-30a6-4c89-a4a0-5ac20551d595"),
                            NameEn = "Bimini Top",
                            NameTr = "Bimini Üstü"
                        },
                        new
                        {
                            Id = new Guid("5f8efc71-7086-451a-8014-d8064bb07a76"),
                            FacilityCategoryId = new Guid("a3f47c0e-30a6-4c89-a4a0-5ac20551d595"),
                            NameEn = "Teak Deck",
                            NameTr = "Teak Güverte"
                        },
                        new
                        {
                            Id = new Guid("96b23f3c-bc3e-4260-8a21-8392a44e482f"),
                            FacilityCategoryId = new Guid("e00c8365-914d-4874-99b5-6c43d6a96717"),
                            NameEn = "Bow Thruster",
                            NameTr = "Baş Pervane"
                        },
                        new
                        {
                            Id = new Guid("2681befa-cacb-4372-b385-b701d8d8705f"),
                            FacilityCategoryId = new Guid("a3f47c0e-30a6-4c89-a4a0-5ac20551d595"),
                            NameEn = "Sprayhood",
                            NameTr = "Sprey Çadırı"
                        },
                        new
                        {
                            Id = new Guid("3a325ebd-361d-4859-8125-9656796a20da"),
                            FacilityCategoryId = new Guid("a3f47c0e-30a6-4c89-a4a0-5ac20551d595"),
                            NameEn = "Solar Panel",
                            NameTr = "Güneş Paneli"
                        },
                        new
                        {
                            Id = new Guid("d97179ef-f17c-4cca-a9d2-7afb13c715f3"),
                            FacilityCategoryId = new Guid("a3f47c0e-30a6-4c89-a4a0-5ac20551d595"),
                            NameEn = "GPS",
                            NameTr = "GPS"
                        },
                        new
                        {
                            Id = new Guid("d2337f7f-581c-4df3-966f-d40ef528efcc"),
                            FacilityCategoryId = new Guid("a3f47c0e-30a6-4c89-a4a0-5ac20551d595"),
                            NameEn = "TV / DVD",
                            NameTr = "Televizyon / DVD"
                        },
                        new
                        {
                            Id = new Guid("ed3153d1-bd7d-4c6d-8e77-31677244351c"),
                            FacilityCategoryId = new Guid("a3f47c0e-30a6-4c89-a4a0-5ac20551d595"),
                            NameEn = "Music System AUX",
                            NameTr = "Müzik Sistemi AUX"
                        },
                        new
                        {
                            Id = new Guid("150d1179-8548-47c4-aff4-e4ca001b1ed1"),
                            FacilityCategoryId = new Guid("b2f7e13b-001a-48bb-b4ef-b387c5d90a4c"),
                            NameEn = "Air Conditioning",
                            NameTr = "Klima"
                        },
                        new
                        {
                            Id = new Guid("91cb398e-aae9-4d71-ad39-138aca252b25"),
                            FacilityCategoryId = new Guid("b2f7e13b-001a-48bb-b4ef-b387c5d90a4c"),
                            NameEn = "Internet Connection",
                            NameTr = "İnternet Bağlantısı"
                        },
                        new
                        {
                            Id = new Guid("f46b0b14-9719-46ca-b460-660e6a22f2dd"),
                            FacilityCategoryId = new Guid("b2f7e13b-001a-48bb-b4ef-b387c5d90a4c"),
                            NameEn = "Jacuzzi",
                            NameTr = "Jacuzzi"
                        },
                        new
                        {
                            Id = new Guid("79bbb137-57b4-4fc9-8e2e-db874f05b9c8"),
                            FacilityCategoryId = new Guid("b2f7e13b-001a-48bb-b4ef-b387c5d90a4c"),
                            NameEn = "Outside Shower",
                            NameTr = "Dış Duş"
                        },
                        new
                        {
                            Id = new Guid("e6d0c77b-714b-455f-8498-2433dbfae51a"),
                            FacilityCategoryId = new Guid("b2f7e13b-001a-48bb-b4ef-b387c5d90a4c"),
                            NameEn = "Swim Ladder",
                            NameTr = "Yüzme Merdiveni"
                        },
                        new
                        {
                            Id = new Guid("dcb774d6-77ba-4090-85fa-bce964e02bbc"),
                            FacilityCategoryId = new Guid("b2f7e13b-001a-48bb-b4ef-b387c5d90a4c"),
                            NameEn = "Canopy",
                            NameTr = "Şemsiye"
                        },
                        new
                        {
                            Id = new Guid("339d8f62-0712-4d39-9a94-c0dba1aeeeed"),
                            FacilityCategoryId = new Guid("a3f47c0e-30a6-4c89-a4a0-5ac20551d595"),
                            NameEn = "Telephone",
                            NameTr = "Telefon"
                        },
                        new
                        {
                            Id = new Guid("e7f5594f-41eb-444f-80ea-2cd05cdffbea"),
                            FacilityCategoryId = new Guid("a3f47c0e-30a6-4c89-a4a0-5ac20551d595"),
                            NameEn = "Tender",
                            NameTr = "Servis Botu"
                        },
                        new
                        {
                            Id = new Guid("b6e2aa72-3ce9-4bed-96cb-b5a6ad0f1385"),
                            FacilityCategoryId = new Guid("c1c48a44-6b02-4e6a-95c5-1d262788b7f0"),
                            NameEn = "Canoe",
                            NameTr = "Kano"
                        },
                        new
                        {
                            Id = new Guid("2f41793a-1d95-4006-8eeb-107ea418bc9c"),
                            FacilityCategoryId = new Guid("c1c48a44-6b02-4e6a-95c5-1d262788b7f0"),
                            NameEn = "Depth Sounder",
                            NameTr = "Derinlik Ölçümü"
                        },
                        new
                        {
                            Id = new Guid("88f8f14f-8a9a-45a4-954d-0ff7f1d8265f"),
                            FacilityCategoryId = new Guid("c1c48a44-6b02-4e6a-95c5-1d262788b7f0"),
                            NameEn = "Snorkeling and Fishing Equipment",
                            NameTr = "Şnorkel ve Balık Avı Ekipmanları"
                        },
                        new
                        {
                            Id = new Guid("99d9f57f-abf0-4d9f-85b5-db8a045c2b9c"),
                            FacilityCategoryId = new Guid("1db7a378-5e4e-4c61-b0a2-f7dab56f6d51"),
                            NameEn = "Dishwasher",
                            NameTr = "Bulaşık Makinesi"
                        },
                        new
                        {
                            Id = new Guid("57c2b597-bbb6-46f9-babf-5283dba0a65a"),
                            FacilityCategoryId = new Guid("a3f47c0e-30a6-4c89-a4a0-5ac20551d595"),
                            NameEn = "Outboard Engine",
                            NameTr = "Dıştan Takma Motor"
                        },
                        new
                        {
                            Id = new Guid("987ee924-82a0-44e3-b207-4daed6e59f72"),
                            FacilityCategoryId = new Guid("b2f7e13b-001a-48bb-b4ef-b387c5d90a4c"),
                            NameEn = "Bar",
                            NameTr = "Bar"
                        },
                        new
                        {
                            Id = new Guid("78a8f2d1-9e2f-45e7-8dc2-8e1d640869c2"),
                            FacilityCategoryId = new Guid("a3f47c0e-30a6-4c89-a4a0-5ac20551d595"),
                            NameEn = "Satellite Connection",
                            NameTr = "Uydu Bağlantısı"
                        },
                        new
                        {
                            Id = new Guid("d59d28e3-319d-4682-8e59-67667d947a83"),
                            FacilityCategoryId = new Guid("e00c8365-914d-4874-99b5-6c43d6a96717"),
                            NameEn = "Autopilot",
                            NameTr = "Otomatik Pilot"
                        },
                        new
                        {
                            Id = new Guid("ad91b440-9e12-4d6c-926b-7887397d1a79"),
                            FacilityCategoryId = new Guid("e00c8365-914d-4874-99b5-6c43d6a96717"),
                            NameEn = "Navtex (Satellite Weather Report)",
                            NameTr = "Navtex (Uydu Hava Raporu)"
                        },
                        new
                        {
                            Id = new Guid("d5bd72e7-a67d-4731-9694-87b0e86de2a2"),
                            FacilityCategoryId = new Guid("a3f47c0e-30a6-4c89-a4a0-5ac20551d595"),
                            NameEn = "Service Boat",
                            NameTr = "Servis Botu"
                        },
                        new
                        {
                            Id = new Guid("144e94aa-6d38-45d1-bb8e-678019de37fd"),
                            FacilityCategoryId = new Guid("e00c8365-914d-4874-99b5-6c43d6a96717"),
                            NameEn = "Radar",
                            NameTr = "Radar"
                        },
                        new
                        {
                            Id = new Guid("d3cd6394-3222-46df-a677-c9302e9499bf"),
                            FacilityCategoryId = new Guid("e00c8365-914d-4874-99b5-6c43d6a96717"),
                            NameEn = "VHF",
                            NameTr = "VHF"
                        },
                        new
                        {
                            Id = new Guid("3e5e14c8-a9fa-4b54-a4ee-ec82189b10af"),
                            FacilityCategoryId = new Guid("1db7a378-5e4e-4c61-b0a2-f7dab56f6d51"),
                            NameEn = "Ice Machine",
                            NameTr = "Buz Makinesi"
                        },
                        new
                        {
                            Id = new Guid("dc88f861-098d-4152-b101-a8157c803daf"),
                            FacilityCategoryId = new Guid("a3f47c0e-30a6-4c89-a4a0-5ac20551d595"),
                            NameEn = "Classic Mainsail",
                            NameTr = "Klasik Ana Yelken"
                        },
                        new
                        {
                            Id = new Guid("a47e35dc-69ac-46bf-bff5-43e9d26be416"),
                            FacilityCategoryId = new Guid("c1c48a44-6b02-4e6a-95c5-1d262788b7f0"),
                            NameEn = "Repair Kits",
                            NameTr = "Tamir Kitleri"
                        },
                        new
                        {
                            Id = new Guid("3ed945b9-de82-461d-9349-6638dd2a75b4"),
                            FacilityCategoryId = new Guid("c1c48a44-6b02-4e6a-95c5-1d262788b7f0"),
                            NameEn = "Fire Extinguisher",
                            NameTr = "Yangın Söndürücü"
                        },
                        new
                        {
                            Id = new Guid("2f700ce8-3625-4c97-8ca5-1a6ff658fb64"),
                            FacilityCategoryId = new Guid("1db7a378-5e4e-4c61-b0a2-f7dab56f6d51"),
                            NameEn = "Coffee Machine",
                            NameTr = "Kahve Makinesi"
                        },
                        new
                        {
                            Id = new Guid("51d8be6d-0990-41b7-9754-1b64860fde74"),
                            FacilityCategoryId = new Guid("e00c8365-914d-4874-99b5-6c43d6a96717"),
                            NameEn = "Navigation",
                            NameTr = "Navigasyon"
                        },
                        new
                        {
                            Id = new Guid("6f91253d-9f4d-475a-8f4a-8f29c27db56a"),
                            FacilityCategoryId = new Guid("1db7a378-5e4e-4c61-b0a2-f7dab56f6d51"),
                            NameEn = "Stove",
                            NameTr = "Ocak"
                        },
                        new
                        {
                            Id = new Guid("b7c347b2-0f5d-48dc-a432-34e0d56b0972"),
                            FacilityCategoryId = new Guid("1db7a378-5e4e-4c61-b0a2-f7dab56f6d51"),
                            NameEn = "Freezer",
                            NameTr = "Dondurucu"
                        },
                        new
                        {
                            Id = new Guid("3c61755b-6a85-4a35-bd67-2e6a3a161e97"),
                            FacilityCategoryId = new Guid("1db7a378-5e4e-4c61-b0a2-f7dab56f6d51"),
                            NameEn = "Heater",
                            NameTr = "Isıtıcı"
                        },
                        new
                        {
                            Id = new Guid("4e41e85a-7fb3-45e7-832d-51a63f06034e"),
                            FacilityCategoryId = new Guid("1db7a378-5e4e-4c61-b0a2-f7dab56f6d51"),
                            NameEn = "Kitchen Utensils",
                            NameTr = "Mutfak Malzemeleri"
                        },
                        new
                        {
                            Id = new Guid("a0338a12-ada7-4b99-bec5-8b1a0d9fb9a9"),
                            FacilityCategoryId = new Guid("1db7a378-5e4e-4c61-b0a2-f7dab56f6d51"),
                            NameEn = "Microwave Oven",
                            NameTr = "Mikrodalga Fırın"
                        },
                        new
                        {
                            Id = new Guid("1b2a1d64-87d3-49dc-927d-0c44e8d42e9c"),
                            FacilityCategoryId = new Guid("1db7a378-5e4e-4c61-b0a2-f7dab56f6d51"),
                            NameEn = "Oven",
                            NameTr = "Fırın"
                        },
                        new
                        {
                            Id = new Guid("de11f0f5-4e9b-4e5f-a7fb-15b370b0f929"),
                            FacilityCategoryId = new Guid("1db7a378-5e4e-4c61-b0a2-f7dab56f6d51"),
                            NameEn = "Refrigerator",
                            NameTr = "Buzdolabı"
                        },
                        new
                        {
                            Id = new Guid("6d962a0b-9231-49e5-82b7-03516e3b48d7"),
                            FacilityCategoryId = new Guid("a1e93a3d-6f42-4a15-a0c8-abf80693f9bc"),
                            NameEn = "Waste Tank",
                            NameTr = "Atık Tankı"
                        },
                        new
                        {
                            Id = new Guid("9e671baf-3d9e-4c2d-9196-8b694e22787a"),
                            FacilityCategoryId = new Guid("1db7a378-5e4e-4c61-b0a2-f7dab56f6d51"),
                            NameEn = "Grill",
                            NameTr = "Mangal"
                        },
                        new
                        {
                            Id = new Guid("26a6d23e-8d6b-4c50-9d8f-08bb9a388ff8"),
                            FacilityCategoryId = new Guid("a3f47c0e-30a6-4c89-a4a0-5ac20551d595"),
                            NameEn = "Sunbathing Beds",
                            NameTr = "Güneşlenme Yatakları"
                        },
                        new
                        {
                            Id = new Guid("4efa6ff3-7984-4e59-b23f-7f3f3873d687"),
                            FacilityCategoryId = new Guid("b2f7e13b-001a-48bb-b4ef-b387c5d90a4c"),
                            NameEn = "Crew Cabin",
                            NameTr = "Crew Kabin"
                        },
                        new
                        {
                            Id = new Guid("f97f6d36-8100-4721-917f-0f5716fdf8a9"),
                            FacilityCategoryId = new Guid("b2f7e13b-001a-48bb-b4ef-b387c5d90a4c"),
                            NameEn = "Pillows and Blankets",
                            NameTr = "Yastıklar ve Battaniyeler"
                        },
                        new
                        {
                            Id = new Guid("f2e6f7f3-a056-4552-8fc7-72aa11d23e3e"),
                            FacilityCategoryId = new Guid("a1e93a3d-6f42-4a15-a0c8-abf80693f9bc"),
                            NameEn = "Sink",
                            NameTr = "Lavabo"
                        },
                        new
                        {
                            Id = new Guid("8d2a1e78-1a79-4f39-92c5-b4f26519bcb1"),
                            FacilityCategoryId = new Guid("b2f7e13b-001a-48bb-b4ef-b387c5d90a4c"),
                            NameEn = "Towel",
                            NameTr = "Havlu"
                        },
                        new
                        {
                            Id = new Guid("c3f93f88-5e5d-4635-9149-17ee18a0140c"),
                            FacilityCategoryId = new Guid("c1c48a44-6b02-4e6a-95c5-1d262788b7f0"),
                            NameEn = "Salon GPS Plotter",
                            NameTr = "Salon GPS Plotter"
                        },
                        new
                        {
                            Id = new Guid("a67f8e7f-a53a-43e3-90b9-d88dde8c9d28"),
                            FacilityCategoryId = new Guid("a3f47c0e-30a6-4c89-a4a0-5ac20551d595"),
                            NameEn = "Dinghy",
                            NameTr = "Dingi"
                        },
                        new
                        {
                            Id = new Guid("548506fe-b619-4f76-b0ad-2f33d5102d85"),
                            FacilityCategoryId = new Guid("c1c48a44-6b02-4e6a-95c5-1d262788b7f0"),
                            NameEn = "Generator",
                            NameTr = "Jeneratör"
                        },
                        new
                        {
                            Id = new Guid("a1b45a2b-9c31-4d53-9009-7416da5e1b0d"),
                            FacilityCategoryId = new Guid("c1c48a44-6b02-4e6a-95c5-1d262788b7f0"),
                            NameEn = "Solar Panels",
                            NameTr = "Güneş Panelleri"
                        },
                        new
                        {
                            Id = new Guid("dcc1a4ec-3208-48f9-9f67-917fd0802c09"),
                            FacilityCategoryId = new Guid("c1c48a44-6b02-4e6a-95c5-1d262788b7f0"),
                            NameEn = "Electric Winches",
                            NameTr = "Electric Winches"
                        },
                        new
                        {
                            Id = new Guid("4a489577-9462-46b2-925c-ce21153c1730"),
                            FacilityCategoryId = new Guid("c1c48a44-6b02-4e6a-95c5-1d262788b7f0"),
                            NameEn = "Inverter",
                            NameTr = "Inverter"
                        },
                        new
                        {
                            Id = new Guid("f5b1467c-bd30-4d28-a9e0-b5b4e42db3db"),
                            FacilityCategoryId = new Guid("c1c48a44-6b02-4e6a-95c5-1d262788b7f0"),
                            NameEn = "Cockpit Speakers",
                            NameTr = "Kokpit Hoparlörleri"
                        },
                        new
                        {
                            Id = new Guid("c983405d-9a7e-49fb-b5b3-4b06b04f1a44"),
                            FacilityCategoryId = new Guid("c1c48a44-6b02-4e6a-95c5-1d262788b7f0"),
                            NameEn = "Sound System",
                            NameTr = "Ses Sistemi"
                        });
                });

            modelBuilder.Entity("SailingPeople.Domain.FacilityCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NameTr")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("FacilityCategory");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a1e93a3d-6f42-4a15-a0c8-abf80693f9bc"),
                            NameEn = "Sanitary Facilities",
                            NameTr = "Sanitasyon Tesisleri"
                        },
                        new
                        {
                            Id = new Guid("1db7a378-5e4e-4c61-b0a2-f7dab56f6d51"),
                            NameEn = "Kitchen Equipment",
                            NameTr = "Mutfak Ekipmanları"
                        },
                        new
                        {
                            Id = new Guid("a3f47c0e-30a6-4c89-a4a0-5ac20551d595"),
                            NameEn = "Exterior Equipment",
                            NameTr = "Dış Ekipmanlar"
                        },
                        new
                        {
                            Id = new Guid("e00c8365-914d-4874-99b5-6c43d6a96717"),
                            NameEn = "Security",
                            NameTr = "Güvenlik"
                        },
                        new
                        {
                            Id = new Guid("b2f7e13b-001a-48bb-b4ef-b387c5d90a4c"),
                            NameEn = "Comfort on Board",
                            NameTr = "Yacht Konforu"
                        },
                        new
                        {
                            Id = new Guid("c1c48a44-6b02-4e6a-95c5-1d262788b7f0"),
                            NameEn = "Additional Equipment",
                            NameTr = "Ekstra Ekipmanlar"
                        });
                });

            modelBuilder.Entity("SailingPeople.Domain.Spec", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NameTr")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Specs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("da17d13c-0b26-4858-a9cb-b9582bdb74be"),
                            NameEn = "Year of Construction",
                            NameTr = "Yapım Yılı"
                        },
                        new
                        {
                            Id = new Guid("ddb0dc04-930d-453a-bf1d-2b0e674a1994"),
                            NameEn = "Water Capacity",
                            NameTr = "Su Kapasitesi"
                        },
                        new
                        {
                            Id = new Guid("ec25eeab-c424-477a-9b4a-a3b4f5c9e361"),
                            NameEn = "Furling Genoa",
                            NameTr = "Yelkenin Sarılması"
                        },
                        new
                        {
                            Id = new Guid("4e46cd80-163b-4718-a286-ddc378d45c13"),
                            NameEn = "Engine",
                            NameTr = "Motor"
                        },
                        new
                        {
                            Id = new Guid("a07cb0f9-4c39-4f57-9405-77bf8d6e1d93"),
                            NameEn = "Flag",
                            NameTr = "Bayrak"
                        },
                        new
                        {
                            Id = new Guid("6e0db24f-e1eb-46eb-86b1-cde121c1cf24"),
                            NameEn = "Fuel Capacity",
                            NameTr = "Yakıt Kapasitesi"
                        },
                        new
                        {
                            Id = new Guid("a7bc34ac-f43f-4e67-b59b-40ef07a31592"),
                            NameEn = "Electric Winch",
                            NameTr = "Elektrikli Winch"
                        },
                        new
                        {
                            Id = new Guid("e51798a7-2047-4ef3-8db3-4ab87cc5d0b9"),
                            NameEn = "Model",
                            NameTr = "Model"
                        },
                        new
                        {
                            Id = new Guid("41e722c1-bfb5-48f3-b706-b99ecf754ebf"),
                            NameEn = "Generator",
                            NameTr = "Jeneratör"
                        },
                        new
                        {
                            Id = new Guid("b7a326a4-7c04-4382-a667-aa0a062c4972"),
                            NameEn = "Fuel Tank",
                            NameTr = "Yakıt Tankı"
                        },
                        new
                        {
                            Id = new Guid("e0a49834-40ae-487f-ae8b-a33194cc9d1c"),
                            NameEn = "Double Cabin",
                            NameTr = "Çift Kabin"
                        },
                        new
                        {
                            Id = new Guid("2a48445d-384e-4fd9-9100-60df49125e1a"),
                            NameEn = "Fresh Water Tank",
                            NameTr = "Temiz Su Tankı"
                        },
                        new
                        {
                            Id = new Guid("f713fb86-a965-4bad-8e5e-cde3714f2e0e"),
                            NameEn = "Master Cabin",
                            NameTr = "Ana Kabin"
                        },
                        new
                        {
                            Id = new Guid("f0d7957c-c779-4a6a-a9e8-07e7d097c164"),
                            NameEn = "Mainsail",
                            NameTr = "Ana Yelken"
                        },
                        new
                        {
                            Id = new Guid("e7a5e5f6-c5d5-43be-a7bc-68897d7977c1"),
                            NameEn = "Draft",
                            NameTr = "Su Çekilmesi"
                        },
                        new
                        {
                            Id = new Guid("48fe5920-1dd1-4583-bf74-fbac08209ba9"),
                            NameEn = "Furling Mainsail",
                            NameTr = "Sarılabilen Ana Yelken"
                        },
                        new
                        {
                            Id = new Guid("d02087d8-7684-4b78-9d1a-7e70e092cbeb"),
                            NameEn = "Twin Cabin",
                            NameTr = "İkiz Kabin"
                        },
                        new
                        {
                            Id = new Guid("66d2fe7f-1319-455c-b1c6-79b66b5a4420"),
                            NameEn = "Chartplotter",
                            NameTr = "Harita Plotteri"
                        });
                });

            modelBuilder.Entity("SailingPeople.Domain.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BoatFacility", b =>
                {
                    b.HasOne("SailingPeople.Domain.Boat", null)
                        .WithMany()
                        .HasForeignKey("BoatsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SailingPeople.Domain.Facility", null)
                        .WithMany()
                        .HasForeignKey("FacilitiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SailingPeople.Domain.Boat", b =>
                {
                    b.HasOne("SailingPeople.Domain.Category", "Category")
                        .WithMany("Boats")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("SailingPeople.Domain.BoatImage", b =>
                {
                    b.HasOne("SailingPeople.Domain.Boat", "Boat")
                        .WithMany("BoatImages")
                        .HasForeignKey("BoatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Boat");
                });

            modelBuilder.Entity("SailingPeople.Domain.BoatSpec", b =>
                {
                    b.HasOne("SailingPeople.Domain.Boat", "Boat")
                        .WithMany("BoatSpecs")
                        .HasForeignKey("BoatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SailingPeople.Domain.Spec", "Spec")
                        .WithMany("BoatSpecs")
                        .HasForeignKey("SpecId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Boat");

                    b.Navigation("Spec");
                });

            modelBuilder.Entity("SailingPeople.Domain.Facility", b =>
                {
                    b.HasOne("SailingPeople.Domain.FacilityCategory", "FacilityCategory")
                        .WithMany("Facilities")
                        .HasForeignKey("FacilityCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FacilityCategory");
                });

            modelBuilder.Entity("SailingPeople.Domain.Boat", b =>
                {
                    b.Navigation("BoatImages");

                    b.Navigation("BoatSpecs");
                });

            modelBuilder.Entity("SailingPeople.Domain.Category", b =>
                {
                    b.Navigation("Boats");
                });

            modelBuilder.Entity("SailingPeople.Domain.FacilityCategory", b =>
                {
                    b.Navigation("Facilities");
                });

            modelBuilder.Entity("SailingPeople.Domain.Spec", b =>
                {
                    b.Navigation("BoatSpecs");
                });
#pragma warning restore 612, 618
        }
    }
}
